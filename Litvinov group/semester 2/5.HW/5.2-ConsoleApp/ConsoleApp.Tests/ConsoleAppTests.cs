using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;

namespace ConsoleApp
{
    [TestClass]
    public class ConsoleAppTests
    {
        private char[,] map1;
        private char[,] map2;
        private MakeMap makeMap = new MakeMap();

        /// <summary>
        /// Initialize some variables
        /// </summary>
        [TestInitialize]
        public void Init()
        {
            map1 = new char[6, 10] {{' ', '@', '@', '@', '@', '@', '@', '@', '@', ' '},
                                    {'@', ' ', '@', '@', ' ', ' ', '@', '@', '@', '@'},
                                    {'@', ' ', '@', '@', '@', ' ', ' ', ' ', ' ', '@'},
                                    {'@', ' ', ' ', '@', '@', '@', '@', '@', ' ', '@'},
                                    {'@', '@', ' ', ' ', ' ', ' ', '@', '@', '@', '@'},
                                    {' ', ' ', ' ', '@', '@', '@', '@', '@', '@', ' '}};

            map2 = new char[21, 27]
            {{'@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@' },
             {'@', ' ', ' ', ' ', '@', ' ', ' ', ' ', '@', ' ', ' ', ' ', '@', ' ', '@', '@', '@', ' ', ' ', ' ', '@', '@', '@', ' ', ' ', ' ', '@' },
             {'@', ' ', '@', ' ', '@', ' ', '@', '@', '@', ' ', '@', ' ', '@', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '@' },
             {' ', ' ', '@', ' ', '@', ' ', '@', ' ', ' ', ' ', '@', ' ', '@', ' ', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', ' ', '@' },
             {'@', ' ', '@', ' ', ' ', ' ', '@', '@', '@', '@', '@', ' ', '@', ' ', '@', ' ', ' ', ' ', '@', ' ', ' ', ' ', ' ', ' ', '@', ' ', '@' },
             {'@', '@', '@', '@', '@', ' ', '@', ' ', ' ', ' ', ' ', ' ', '@', ' ', '@', ' ', '@', ' ', '@', '@', '@', '@', '@', ' ', '@', ' ', '@' },
             {'@', ' ', ' ', ' ', ' ', ' ', '@', ' ', '@', '@', '@', '@', '@', ' ', '@', ' ', '@', ' ', '@', ' ', ' ', ' ', '@', ' ', '@', ' ', '@' },
             {'@', ' ', ' ', ' ', ' ', ' ', '@', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '@', ' ', '@', ' ', '@', ' ', ' ', ' ', '@', ' ', '@', ' ', ' ' },
             {'@', ' ', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', ' ', '@', ' ', '@', ' ', '@', ' ', '@', ' ', ' ', ' ', '@', ' ', '@' },
             {'@', ' ', '@', ' ', ' ', ' ', ' ', ' ', '@', ' ', ' ', ' ', '@', ' ', '@', ' ', '@', ' ', '@', ' ', '@', '@', '@', '@', '@', ' ', '@' },
             {'@', ' ', '@', ' ', '@', '@', '@', '@', '@', ' ', '@', ' ', '@', ' ', '@', ' ', '@', ' ', ' ', ' ', '@', ' ', ' ', ' ', '@', ' ', '@' },
             {'@', ' ', '@', ' ', '@', ' ', ' ', ' ', ' ', ' ', '@', ' ', '@', ' ', ' ', ' ', '@', ' ', '@', '@', '@', ' ', '@', ' ', '@', ' ', '@' },
             {'@', ' ', '@', ' ', '@', ' ', '@', '@', '@', ' ', '@', ' ', '@', '@', '@', '@', '@', ' ', '@', ' ', ' ', ' ', '@', ' ', '@', ' ', '@' },
             {'@', ' ', '@', ' ', ' ', ' ', '@', ' ', ' ', ' ', '@', ' ', '@', ' ', ' ', ' ', ' ', ' ', '@', ' ', '@', '@', '@', ' ', '@', ' ', '@' },
             {'@', ' ', '@', '@', '@', ' ', '@', ' ', '@', ' ', '@', '@', '@', ' ', ' ', ' ', ' ', ' ', '@', ' ', '@', ' ', ' ', ' ', '@', ' ', '@' },
             {'@', ' ', '@', ' ', '@', ' ', '@', ' ', '@', ' ', ' ', ' ', ' ', ' ', '@', '@', '@', '@', '@', ' ', '@', '@', '@', '@', '@', ' ', ' ' },
             {'@', ' ', '@', ' ', '@', ' ', '@', '@', '@', '@', '@', '@', '@', '@', '@', ' ', ' ', ' ', '@', ' ', ' ', ' ', '@', ' ', ' ', ' ', '@' },
             {'@', ' ', '@', ' ', '@', ' ', ' ', ' ', '@', ' ', ' ', ' ', '@', ' ', ' ', ' ', '@', ' ', '@', '@', '@', ' ', '@', '@', '@', ' ', '@' },
             {'@', ' ', '@', ' ', '@', ' ', '@', ' ', ' ', ' ', '@', ' ', '@', '@', '@', '@', '@', ' ', '@', ' ', '@', ' ', '@', '@', '@', ' ', '@' },
             {'@', ' ', ' ', ' ', ' ', ' ', '@', ' ', ' ', ' ', '@', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '@', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '@' },
             {'@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', ' ', '@', '@', '@', '@' }};
        }

        /// <summary>
        /// Check whether Input works right on Test
        /// </summary>
        [TestMethod]
        public void CheckWhetherInputIsRightOnMap1()
        {
            var matrix = makeMap.Input("Test.txt");
            for (var i = 0; i < 6; ++i)
            {
                for (var j = 0; j < 10; ++j)
                {
                    Assert.AreEqual(matrix[i, j], map1[i, j]);
                }
            }
        }

        /// <summary>
        /// Check whether Input works right on Test2
        /// </summary>
        [TestMethod]
        public void CheckWhetherInputIsRightOnMap2()
        {
            var matrix = makeMap.Input("Test2.txt");
            for (var i = 0; i < 21; ++i)
            {
                for (var j = 0; j < 27; ++j)
                {
                    Assert.AreEqual(matrix[i, j], map2[i, j]);
                }
            }
        }

        /// <summary>
        /// Set the coords, program shan`t fall
        /// </summary>
        [TestMethod]
        public void CheckSettingStartCoords()
        {
            var x = 1;
            var y = 1;
            var game = new Game(map1, x, y);
        }

        /// <summary>
        /// Try to enter wrong coords, program shall fall
        /// </summary>
        [TestMethod]
        [ExpectedException(typeof(WrongCoordsException))]
        public void TryToEnterWrongCoords()
        {
            var x = -1;
            var y = 0;
            var game = new Game(map1, x, y);
        }
    }
}
